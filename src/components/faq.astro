---
import * as Icon from "@astropub/icons";

const faq = [
    {
        question: "Bagaimana sistem pembelajarannya ?",
        answer: "Akan ada live class tiap minggunya & kamu akan diberikan akses ke member area. Pada member area, kamu bisa akses modul & recording kelas pembelajaran lewat grup discord. Kamu bisa pause dan ulang pembelajarannya kapanpun dimanapun.",
    },
    {
        question: "Apakah bisa diakses lewat HP ?",
        answer: "Kamu bisa akses member area beserta video pembelajarannya lewat browser HP.",
    },
    {
        question: "Saya belum ada basic IT ?",
        answer: "Kelas ini justru sangat tepat dan relevan bagi kamu yang masih pemula dan merasa basic IT masih sangat kurang. Mentor yang sudah tersertifikasi & terjun di industri selama 10+ tahun akan membimbingmu step by step dan memberikan solusi yang tepat bagi kamu yang masih pemula.",
    },
    {
        question: "Kalau bingung, gimana tanyanya ?",
        answer: "Jika ada kebingungan, Kamu bisa bertanya dan konsultasi melalui komunitas discord karena sudah disediakan senior - senior mentor untuk membalas dan berdiskusi pertanyaan â€“ pertanyaan kamu.",
    },
    {
        question: "Live rutinnya lewat mana ?",
        answer: "Live kelas & Qna lewat zoom, link akan dibagikan di channel discord Cyber House. Hanya member saja yang bisa join. Apabila tidak sempat ikut, tidak perlu khawatir karena rekamannya terdapat pada modul. Sedangkan untuk live konsultasi portofolio, akan dilakukan lewat live discord.",
    }
];
---

<section class="my-3" >
<center><h1 class="text-4xl font-extrabold mb-[3rem]" >FREQUENTLY ASKED <span class="text-[#f5ba20]" >QUESTION</span></h1></center>

<center>
    {
        faq.map(({ answer, question }) => (
            <div class="accordion group relative mt-[1rem]  w-[80%] max-sm:w-[90%] rounded-md bg-offset">
                <button
                    class="accordion__button flex w-full flex-1 items-center justify-between gap-2 p-3 text-left font-medium transition text-2xl hover:text-[#f5ba20] max-md:text-lg max-sm:text-sm sm:px-4"
                    type="button"
                    id={`${question} accordion menu button`}
                    aria-expanded="false"
                    aria-controls={`${question} accordion menu content`}
                >
                    {question}

                    <Icon.ChevronDown
                        aria-hidden="true"
                        class="accordion__chevron h-7 w-7 shrink-0 transition-transform"
                    />
                </button>

                <div
                    id={`${question} accordion menu content`}
                    aria-labelledby={`${question} accordion menu button`}
                    class="accordion__content hidden max-h-0 overflow-hidden px-3 transition-all duration-300 ease-in-out sm:px-4"
                >
                    <p class="prose mb-4 mt-1 max-w-full text-left transition-[height] max-sm:text-sm">
                        {answer}
                    </p>
                </div>
            </div>
        ))
    }
</center>


</section>

<script>
    function accordionSetup() {
        const accordionMenus = document.querySelectorAll(
            ".accordion",
        ) as NodeListOf<HTMLElement>;
        accordionMenus.forEach((accordionMenu) => {
            const accordionButton = accordionMenu.querySelector(
                ".accordion__button",
            ) as HTMLElement;
            const accordionChevron = accordionMenu.querySelector(
                ".accordion__chevron",
            ) as HTMLElement;
            const accordionContent = accordionMenu.querySelector(
                ".accordion__content",
            ) as HTMLElement;

            if (accordionButton && accordionContent && accordionChevron) {
                accordionButton.addEventListener("click", (event) => {
                    if (!accordionMenu.classList.contains("active")) {
                        accordionMenu.classList.add("active");
                        accordionButton.setAttribute("aria-expanded", "true");
                        accordionContent.classList.remove("hidden");
                        accordionContent.style.maxHeight =
                            accordionContent.scrollHeight + "px";
                        accordionChevron.classList.add("rotate-180");
                    } else {
                        accordionMenu.classList.remove("active");
                        accordionButton.setAttribute("aria-expanded", "false");
                        accordionContent.style.maxHeight = "0px";
                        accordionChevron.classList.remove("rotate-180");
                        setTimeout(() => {
                            accordionContent.classList.add("hidden");
                        }, 300);
                    }
                    event.preventDefault();
                    return false;
                });
            }
        });
    }
    accordionSetup();
    document.addEventListener("astro:after-swap", accordionSetup);
</script>
